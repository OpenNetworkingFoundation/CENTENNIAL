leaf object-id-ref {
      type leafref {
        path "/core-model:control-construct/core-model:logical-termination-point/core-model:uuid";
        require-instance false;
      }
      config false;
      description
        "none";
    }

0000000000000000

 leaf object-id-ref {
      type yang:object-identifier;
      description
        "none";
    }

0000000000000000

leaf object-id-ref {
      type leafref {
        path "/core-model:control-construct/core-model:logical-termination-point/core-model:uuid";
        require-instance false;
      }
      description
        "none";
    }

Hi Thorsten,

You are right. The issue is because the core model you are refering in the papyrus and the one I m using in the UMLToYang is different.
I had another round of debugging in the code(UMLToYang tool) , and found that the in the _ObjRefId , there is a href to coremodel,

<ownedAttribute xmi:type="uml:Property" xmi:id="_K6pvoE6xEeu3DOdKn-DQGQ" name="_objectIdReff" isReadOnly="true" aggregation="shared" association="_K6fXkE6xEeu3DOdKn-DQGQ">
          <type xmi:type="uml:Class" href="../OnfModel/CoreModel.uml#_8N95h9HYEequYsMeHj9H7w"/>
</ownedAttribute>

and the key _8N95h9HYEequYsMeHj9H7w is not available in the coremodel which I m using in the UMLToYang tool and thats why the path is not getting generated.
When I replaced the above mentioned key(_eEpDMFX4EeOVGaP4lO41SQ) with the one available in the core model in the UMLToYang , path is getting generated as expected.
 
Either I have to use the complete coremodel package you are using (or) you have to use the core model which was used to generate air,wire,mac interfaces.
Kindly let me know your views on the change. Also kindly share the complete core-model packages you are using in your papyrus so that will have a check on the same side by.

Thanks,
Prathiba J 